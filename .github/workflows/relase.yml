name: Release workflow

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build and release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2.1.2
      with:
        go-version: ~1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Create build container 
      run: docker build -t rest2dhcp-build -f Dockerfile.build .

    - name: Run build process 
      run: mkdir -p ./build && docker run --rm -v $(pwd)/build:/out rest2dhcp-build

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload amd64
      id: upload-release-asset-amd64 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/rest2dhcp-amd64
        asset_name: rest2dhcp-linux-x86_64
        asset_content_type: application/octet-stream

    - name: Upload 386
      id: upload-release-asset-386 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/rest2dhcp-386
        asset_name: rest2dhcp-linux-386
        asset_content_type: application/octet-stream

    - name: Upload arm64
      id: upload-release-asset-arm64 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/rest2dhcp-arm64
        asset_name: rest2dhcp-linux-arm64
        asset_content_type: application/octet-stream
  
    - name: Upload arm
      id: upload-release-asset-arm 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/rest2dhcp-arm
        asset_name: rest2dhcp-linux-arm
        asset_content_type: application/octet-stream
    