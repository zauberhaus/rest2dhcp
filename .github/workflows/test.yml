name: Test master

on:
  push:
    branches:
      - master
jobs:
  tests:
    name: Master Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Start DHCP server
        id: dhcp
        run: |
          docker build -t dhcp -f Dockerfile.dhcp .
          DHCP_ID=`docker run -d --rm --name dhcp dhcp`  
          DHCP_IP=`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' dhcp`
          echo ::set-output name=id::${DHCP_ID}
          echo ::set-output name=ip::${DHCP_IP}

      - name: Build test container
        run: docker build -t rest2dhcp:test -f Dockerfile.wf .  
  
      - name: Run udp tests
        run: docker run --rm -e SERVER=${{ steps.dhcp.outputs.ip }} -e MODE=udp rest2dhcp:test  

      - name: Run dual tests
        run: docker run --rm -e SERVER=${{ steps.dhcp.outputs.ip }} -e MODE=dual rest2dhcp:test  

      - name: Run packet tests
        run: docker run --rm -e SERVER=${{ steps.dhcp.outputs.ip }} -e MODE=packet rest2dhcp:test  

      - name: Stop DHCP
        if: steps.dhcp.outputs.id 
        run: |
          docker logs ${{ steps.dhcp.outputs.id }}  
          docker stop ${{ steps.dhcp.outputs.id }} 



  master:
    name: Push Master Image
    runs-on: ubuntu-latest
    needs: tests
    if : false

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          [ "$VERSION" == "master" ] && IMAGE_NAME=master  

          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
        